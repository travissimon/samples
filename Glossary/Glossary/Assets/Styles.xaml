<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
    xmlns:dataPrimitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls.Data"         
	xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation"
	xmlns:data="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data"
	xmlns:dataControls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data.DataForm.Toolkit" 
	xmlns:appControls="clr-namespace:Glossary.Controls"
	xmlns:loginWindow="clr-namespace:Glossary.LoginUI"
	xmlns:mscor="clr-namespace:System;assembly=mscorlib"
	xmlns:dataInput="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data.Input">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Controls/BusyIndicator.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<LinearGradientBrush x:Key="GradientBrush1" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF14BBD2" Offset="0"/>
		<GradientStop Color="#FF013C6C" Offset="1"/>
	</LinearGradientBrush>
	<!-- *************COLORS START************* -->

	<!-- Theme Base Colors -->

	<!--ACCENT COLORS-->
	<Color x:Key="HighlightDarkColor">#FF119EDA</Color>
	<Color x:Key="HighlightLightColor">#FFB2E0F4</Color>
	<!--80%-->
	<Color x:Key="AccentColor">#CC119EDA</Color>
	<!--60%-->
	<Color x:Key="AccentColor2">#99119EDA</Color>
	<!--40%-->
	<Color x:Key="AccentColor3">#66119EDA</Color>
	<!--20%-->
	<Color x:Key="AccentColor4">#33119EDA</Color>

	<!--BASE COLORS-->
	<Color x:Key="BlackColor">#FF000000</Color>
	<Color x:Key="WhiteColor">#FFFFFFFF</Color>
	<Color x:Key="Gray1">#FFCCCCCC</Color>
	<Color x:Key="Gray2">#FF7F7F7F</Color>
	<Color x:Key="Gray3">#FF333333</Color>
	<Color x:Key="Gray4">#FFB9B9B9</Color>
	<Color x:Key="Gray5">#FFD8D8D9</Color>
	<Color x:Key="Gray6">#FF9D9D9D</Color>
	<Color x:Key="Gray7">#FFF7F7F7</Color>
	<Color x:Key="Gray8">#FFE0E0E0</Color>
	<Color x:Key="Gray9">#FFA59F93</Color>
	<Color x:Key="Gray10">#7FFFFFFF</Color>
	<Color x:Key="Gray11">#7FA9A9A9</Color>
	<Color x:Key="Gray12">#A5F7F7F7</Color>
	<Color x:Key="Gray13">#33C9C9C9</Color>
	<Color x:Key="TextBoxText">#FF414141</Color>
	<Color x:Key="NormalForegroundColor">#FF000000</Color>
	<Color x:Key="HoverForegroundColor">#FFFFFFFF</Color>
	<!--Note: For the best design BaseColor2 should be a contrast of BaseColor1-->
	<Color x:Key="BaseColor2">#FFFFFFFF</Color>
	<Color x:Key="BaseColor5">#FFBABABA</Color>
	<Color x:Key="BaseColor3">#FF303030</Color>

	<!--LIGHT COLOR TRANSPARENCIES-->
	<!--0%-->
	<Color x:Key="TransparentWhiteColor">#00FFFFFF</Color>
	<!--10%-->
	<Color x:Key="TransparentWhiteLightColor">#19FFFFFF</Color>
	<!--25%-->
	<Color x:Key="TransparentLightestColor">#34FFFFFF</Color>
	<!--65%-->
	<Color x:Key="TransparentLightLightColor">#A5FFFFFF</Color>
	<!--85%-->
	<Color x:Key="TransparentLightColor">#D8FFFFFF</Color>


	<!--DARK COLOR TRANSPARENCIES-->
	<!--0%-->
	<Color x:Key="TransparentBlackColor">#00000000</Color>
	<!--25%-->
	<Color x:Key="TransparentDarkColor">#3F000000</Color>
	<!--35%-->
	<Color x:Key="TransparentDarkDarkColor">#59000000</Color>
	<!--60%-->
	<Color x:Key="TransparentDarkDarkDarkColor">#99000000</Color>
	<!--80%-->
	<Color x:Key="TransparentDarkestColor">#CC000000</Color>

	<!-- CORE CONTROL COLORS-->
	<Color x:Key="ValidationColor1">#052A2E31</Color>
	<Color x:Key="ValidationColor2">#152A2E31</Color>
	<Color x:Key="ValidationColor3">#252A2E31</Color>
	<Color x:Key="ValidationColor4">#352A2E31</Color>
	<Color x:Key="ValidationColor5">#FFDC000C</Color>
	<Color x:Key="ValidationSummaryColor1">#FFDC020D</Color>
	<Color x:Key="ValidationSummaryColor2">#FFCA000C</Color>
	<Color x:Key="ValidationSummaryColor3">#FFFF9298</Color>
	<Color x:Key="ValidationSummaryColor4">#FFFDC8C8</Color>
	<Color x:Key="ValidationSummaryColor5">#DDD43940</Color>
	<Color x:Key="ValidationSummaryFillColor1">#59F7D8DB</Color>
	<Color x:Key="ValidationSummaryFillColor2">#FFF7D8DB</Color>
	<Color x:Key="ControlsValidationColor">#FFDB000C</Color>

	<Color x:Key="ProgressIndeterminateColor1">#33878787</Color>
	<Color x:Key="ProgressIndeterminateColor2">#33959595</Color>
	<Color x:Key="ProgressIndeterminateColor3">#4C000000</Color>
	<Color x:Key="ProgressIndeterminateColor4">#4C000000</Color>

	<!-- SDK COLORS -->
	<Color x:Key="PageOverlayColor">#7F000000</Color>

	<!-- TOOLKIT COLORS -->
	<Color x:Key="RatingStarsColor">#F6FF9900</Color>
	<Color x:Key="RatingMouseOverColor">#F6FDFF70</Color>
	<Color x:Key="TimeHintIconColor1">#F6CAA709</Color>
	<Color x:Key="TimeHintIconColor2">#F3F7F34F</Color>
	<Color x:Key="TimeHintIconColor3">#E7CAA709</Color>
	<Color x:Key="TimeHintIconColor4">#E7967C07</Color>
	<Color x:Key="TimeHintIconColor5">#E7625106</Color>
	<Color x:Key="TimeHintIconColor6">#FB8F8873</Color>
	<Color x:Key="TimeHintIconColor7">#F6271A47</Color>
	<Color x:Key="TimeHintIconColor8">#E7271A47</Color>
	<Color x:Key="TimeHintIconColor9">#9A89782B</Color>
	<Color x:Key="TimeHintIconColor10">#4DEBD60F</Color>
	<Color x:Key="TimeHintIconColor11">#FBF6EC20</Color>
	<Color x:Key="TimeHintIconColor12">#FF1B1B54</Color>
	<Color x:Key="TimeHintIconColor13">#FF1C1C50</Color>

	<Color x:Key="OKButtonIconColor1">#FF67CA0A</Color>
	<Color x:Key="OKButtonIconColor2">#FF498C38</Color>
	<Color x:Key="OKButtonIconColor3">#FF29EE5B</Color>
	<Color x:Key="CancelButtonIconColor1">#FFEA7525</Color>
	<Color x:Key="CancelButtonIconColor2">#FFDA715B</Color>
	<Color x:Key="CancelButtonIconColor3">#FFB72909</Color>

	<!--CHART COLORS-->
	<Color x:Key="ChartBrush1">#FF0097FC</Color>
	<Color x:Key="ChartBrush2">#FF70BBED</Color>
	<Color x:Key="ChartBrush3">#FF70BBED</Color>
	<Color x:Key="ChartBrush4">#FF4556BA</Color>
	<Color x:Key="ChartBrush5">#FFC84BA4</Color>
	<Color x:Key="ChartBrush6">#FF477ABE</Color>
	<Color x:Key="ChartBrush7">#FF6644B7</Color>
	<Color x:Key="ChartBrush8">#FFA045BA</Color>
	<Color x:Key="ChartBrush9">#FF73C348</Color>
	<Color x:Key="ChartBrush10">#FFDD5279</Color>
	<Color x:Key="ChartBrush11">#FF4999C4</Color>
	<Color x:Key="ChartBrush12">#FFEC8B58</Color>
	<Color x:Key="ChartBrush13">#FFECA058</Color>
	<Color x:Key="ChartBrush14">#FFEC6558</Color>
	<Color x:Key="ChartBrush15">#FFEC8B58</Color>
	<Color x:Key="ChartBrush16">#FFECA058</Color>

	<!-- Colors Stop -->

	<!-- *************BRUSHES START************* -->
	<!--PROJECT TEMPLATE BRUSHES -->

	<!-- UNIVERSAL CONTROL BRUSHES -->
	<SolidColorBrush x:Key="ControlBackgroundBrush" Color="{StaticResource WhiteColor}"/>
	<SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}" />
	<SolidColorBrush x:Key="BlackBrush" Color="{StaticResource BlackColor}" />
	<SolidColorBrush x:Key="TextBrush" Color="{StaticResource BlackColor}" />
	<SolidColorBrush x:Key="LabelTextBrush" Color="{StaticResource BlackColor}" />
	<SolidColorBrush x:Key="WhiteColorBrush" Color="{StaticResource WhiteColor}" />
	<SolidColorBrush x:Key="BlackColorBrush" Color="{StaticResource BlackColor}" />

	<SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightDarkColor}" />
	<SolidColorBrush x:Key="HighlightLightBrush" Color="{StaticResource HighlightLightColor}" />
	<SolidColorBrush x:Key="NavigationBorderBrush" Color="#FF9D9492" />
	<SolidColorBrush x:Key="NavigationForegroundBrush" Color="{StaticResource BlackColor}"/>
	<SolidColorBrush x:Key="PageBorderBrush" Color="#FFB2B2B2" />
	<SolidColorBrush x:Key="BodyTextColorBrush" Color="#FF313131"/>
	<SolidColorBrush x:Key="ControlsDisabledBrush" Color="{StaticResource TransparentLightLightColor}"/>
	<SolidColorBrush x:Key="ReadOnlyBrush" Color="{StaticResource TransparentLightestColor}"/>
	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FFAAAAAA"/>
	<SolidColorBrush x:Key="DisabledControlBrush" Color="#FFAAAAAA"/>
	<SolidColorBrush x:Key="DisabledWhiteColorBrush" Color="{StaticResource WhiteColor}" />
	<SolidColorBrush x:Key="RatingStarsBrush" Color="{StaticResource RatingStarsColor}" />
	<SolidColorBrush x:Key="RatingMouseOverBrush" Color="{StaticResource RatingMouseOverColor}" />
	<SolidColorBrush x:Key="PageOverlayBrush" Color="{StaticResource PageOverlayColor}"/>

	<SolidColorBrush x:Key="FuzzBrush1" Color="#1E000000" />
	<SolidColorBrush x:Key="FuzzBrush2" Color="#14000000" />
	<SolidColorBrush x:Key="FuzzBrush3" Color="Black" />

	<SolidColorBrush x:Key="TransparentWhiteBrush" Color="{StaticResource TransparentWhiteColor}"/>
	<SolidColorBrush x:Key="TransparentWhiteLightBrush" Color="{StaticResource TransparentWhiteColor}"/>
	<SolidColorBrush x:Key="TransparentLightestBrush" Color="{StaticResource TransparentLightestColor}"/>
	<SolidColorBrush x:Key="TransparentLightLightBrush" Color="{StaticResource TransparentLightLightColor}"/>
	<SolidColorBrush x:Key="TransparentBlackBrush" Color="{StaticResource TransparentBlackColor}"/>
	<SolidColorBrush x:Key="TransparentDarkBrush" Color="{StaticResource TransparentDarkColor}"/>
	<SolidColorBrush x:Key="TransparentDarkDarkDarkBrush" Color="{StaticResource TransparentDarkDarkDarkColor}"/>

	<SolidColorBrush x:Key="GrayBrush1" Color="{StaticResource Gray1}"/>
	<SolidColorBrush x:Key="GrayBrush2" Color="{StaticResource Gray2}"/>
	<SolidColorBrush x:Key="GrayBrush3" Color="{StaticResource Gray3}"/>
	<SolidColorBrush x:Key="GrayBrush4" Color="{StaticResource Gray4}"/>
	<SolidColorBrush x:Key="GrayBrush5" Color="{StaticResource Gray5}"/>
	<SolidColorBrush x:Key="GrayBrush6" Color="{StaticResource Gray6}"/>
	<SolidColorBrush x:Key="GrayBrush7" Color="{StaticResource Gray7}"/>
	<SolidColorBrush x:Key="GrayBrush8" Color="{StaticResource Gray8}"/>
	<SolidColorBrush x:Key="GrayBrush9" Color="{StaticResource Gray9}"/>
	<SolidColorBrush x:Key="GrayBrush10" Color="{StaticResource Gray10}"/>
	<SolidColorBrush x:Key="GrayBrush11" Color="{StaticResource Gray11}"/>
	<SolidColorBrush x:Key="GrayBrush12" Color="{StaticResource Gray12}"/>
	<SolidColorBrush x:Key="GrayBrush13" Color="{StaticResource Gray13}"/>

	<SolidColorBrush x:Key="HoverHyperlinkForegroundBrush" Color="{StaticResource BlackColor}"/>
	<SolidColorBrush x:Key="HoverHyperlinkBackgroundBrush" Color="{StaticResource WhiteColor}"/>

	<SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Gray1}" />
	<SolidColorBrush x:Key="ControlBorderBrush" Color="{StaticResource Gray1}" />
	<SolidColorBrush x:Key="TextBoxMouseOverBorderBrush" Color="{StaticResource HighlightDarkColor}" />
	<SolidColorBrush x:Key="TextBoxMouseOverInnerBorderBrush" Color="{StaticResource HighlightLightColor}" />

	<SolidColorBrush x:Key="CheckBoxBrush" Color="{StaticResource Gray2}" />
	<SolidColorBrush x:Key="CheckBoxMouseOverBrush" Color="{StaticResource Gray3}" />
	<LinearGradientBrush x:Key="CheckBoxBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFE5E5E5" Offset="0"/>
		<GradientStop Color="{StaticResource WhiteColor}" Offset="1"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="ApplicationNameBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF14BBD2" Offset="0"/>
		<GradientStop Color="#FF013C6C" Offset="1"/>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="ThumbBrush" Color="{StaticResource Gray4}" />

	<SolidColorBrush x:Key="ItemSelectedBrush" Color="{StaticResource Gray5}" />

	<SolidColorBrush x:Key="SliderTrackBrush" Color="{StaticResource Gray6}" />

	<SolidColorBrush x:Key="NormalBrush" Color="{StaticResource Gray7}" />

	<SolidColorBrush x:Key="ComboBoxPopupBrush" Color="{StaticResource Gray9}" />
	<LinearGradientBrush x:Key="BrandingBrush" EndPoint="0.001,0.5" StartPoint="1.002,0.5">
		<GradientStop Color="{StaticResource HighlightDarkColor}" Offset="0"/>
		<GradientStop Color="#FF5FC316" Offset="1"/>
	</LinearGradientBrush>

	<DropShadowEffect x:Key="DropShadowBrush" Direction="330" Opacity="0.3" ShadowDepth="0" BlurRadius="6"/>

	<SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WhiteColor}" />
	<SolidColorBrush x:Key="SeperatorBrush" Color="#FFC4C4C5"/>


	<!-- CONTROL VALIDATION BRUSHES -->
	<SolidColorBrush x:Key="ControlsValidationBrush" Color="{StaticResource ControlsValidationColor}"/>
	<SolidColorBrush x:Key="ValidationBrush1" Color="{StaticResource ValidationColor1}"/>
	<SolidColorBrush x:Key="ValidationBrush2" Color="{StaticResource ValidationColor2}"/>
	<SolidColorBrush x:Key="ValidationBrush3" Color="{StaticResource ValidationColor3}"/>
	<SolidColorBrush x:Key="ValidationBrush4" Color="{StaticResource ValidationColor4}"/>
	<SolidColorBrush x:Key="ValidationBrush5" Color="{StaticResource ValidationColor5}"/>
	<SolidColorBrush x:Key="ValidationSummaryBrush1" Color="{StaticResource ValidationSummaryColor1}"/>
	<SolidColorBrush x:Key="ValidationSummaryBrush2" Color="{StaticResource ValidationSummaryColor2}"/>
	<SolidColorBrush x:Key="ValidationSummaryBrush3" Color="{StaticResource ValidationSummaryColor3}"/>
	<SolidColorBrush x:Key="ValidationSummaryBrush4" Color="{StaticResource ValidationSummaryColor4}"/>
	<SolidColorBrush x:Key="ValidationSummaryBrush5" Color="{StaticResource ValidationSummaryColor5}"/>
	<SolidColorBrush x:Key="ValidationSummaryFillBrush1" Color="{StaticResource ValidationSummaryFillColor1}"/>
	<SolidColorBrush x:Key="ValidationSummaryFillBrush2" Color="{StaticResource ValidationSummaryFillColor2}"/>
	<SolidColorBrush x:Key="ValidationSummaryDisabledBrush" Color="{StaticResource TransparentLightLightColor}"/>

	<!--VALIDATION ICON BRUSHES-->
	<SolidColorBrush x:Key="TimeHintIconBrush1" Color="{StaticResource TimeHintIconColor1}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush2" Color="{StaticResource TimeHintIconColor2}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush3" Color="{StaticResource TimeHintIconColor3}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush4" Color="{StaticResource TimeHintIconColor4}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush5" Color="{StaticResource TimeHintIconColor5}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush6" Color="{StaticResource TimeHintIconColor6}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush7" Color="{StaticResource TimeHintIconColor7}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush8" Color="{StaticResource TimeHintIconColor8}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush9" Color="{StaticResource TimeHintIconColor9}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush10" Color="{StaticResource TimeHintIconColor10}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush11" Color="{StaticResource TimeHintIconColor11}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush12" Color="{StaticResource TimeHintIconColor12}"/>
	<SolidColorBrush x:Key="TimeHintIconBrush13" Color="{StaticResource TimeHintIconColor13}"/>

	<!-- Brushes Stop -->

	<!-- Brushes End -->
	
	

	<FontFamily x:Key="HeaderFontFamily">Segoe UI Light, Lucida Sans Unicode, Verdana</FontFamily>
	<FontFamily x:Key="ContentFontFamily">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>

	<mscor:Double x:Key="ApplicationNameFontSize">50</mscor:Double>
	<mscor:Double x:Key="HeaderFontSize">21.333</mscor:Double>
	<mscor:Double x:Key="ContentFontSize">14</mscor:Double>
	<mscor:Double x:Key="HyperlinkFontSize">14</mscor:Double>
	<mscor:Double x:Key="LabelFontSize">12</mscor:Double>
	<mscor:Double x:Key="ControlTitleFontSize">16</mscor:Double>
	<mscor:Double x:Key="ControlTitleBigFontSize">18</mscor:Double>
	<mscor:Double x:Key="ControlContentFontSize">10</mscor:Double>

	<Style x:Key="LayoutGridStyle" TargetType="Grid">
	</Style>

	<Style x:Key="ApplicationNameStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource GradientBrush1}"/>
		<Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ApplicationNameFontSize}"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated" />
		<Setter Property="Margin" Value="40,30,0,0"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>

	<Style x:Key="HeaderTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource Gray3}"/>
		<Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource HeaderFontSize}"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated" />
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Margin" Value="0,15,0,10"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>

	<Style x:Key="ContentTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource BodyTextColorBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Margin" Value="0,15,0,0"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated" />
	</Style>

	<Style x:Key="ContentBorder" TargetType="Border">
		<Setter Property="Margin" Value="40, 10, 40, 40" />
		<Setter Property="Width" Value="975" />
		<Setter Property="Height" Value="375" />
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="BorderBrush" Value="{StaticResource Gray8}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CornerRadius" Value="10" />
		<Setter Property="Padding" Value="10" />
	</Style>

	<Style x:Key="ContentBorderFront" TargetType="Border" BasedOn="{StaticResource ContentBorder}">
		<Setter Property="Visibility" Value="Visible" />
	</Style>

	<Style x:Key="ContentBorderBack" TargetType="Border" BasedOn="{StaticResource ContentBorder}">
		<Setter Property="Visibility" Value="Collapsed" />
	</Style>

	<Style x:Key="NewEntryStyle" TargetType="HyperlinkButton">
		<Setter Property="Margin" Value="40,20,40,0" />
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
		<Setter Property="FontSize" Value="{StaticResource HeaderFontSize}" />
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
	</Style>

	<!--ValidationToolTipTemplate Style-->
	<ControlTemplate x:Key="ValidationToolTipTemplate">
		<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
			<Grid.RenderTransform>
				<TranslateTransform x:Name="xform" X="-25"/>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="OpenStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0"/>
						<VisualTransition GeneratedDuration="0:0:0.2" To="Open">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Closed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
								<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Open">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
								<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border Background="{StaticResource ValidationBrush1}" CornerRadius="5" Margin="4,4,-4,-4"/>
			<Border Background="{StaticResource ValidationBrush2}" CornerRadius="4" Margin="3,3,-3,-3"/>
			<Border Background="{StaticResource ValidationBrush3}" CornerRadius="3" Margin="2,2,-2,-2"/>
			<Border Background="{StaticResource ValidationBrush4}" CornerRadius="2" Margin="1,1,-1,-1"/>
			<Border Background="{StaticResource ValidationBrush5}" CornerRadius="2"/>
			<Border CornerRadius="2">
				<TextBlock Foreground="{StaticResource WhiteColorBrush}" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
			</Border>
		</Grid>
	</ControlTemplate>

	<!--Button Style-->
	<Style TargetType="Button" x:Key="DefaultButtonStyle">
		<Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Margin" Value="2" />
		<Setter Property="Padding" Value="5,6"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.7"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
						<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
						<Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
						<Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
						<Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
						<Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--TextBox Style-->
	<Style TargetType="TextBox" x:Key="DefaultTextBoxStyle">
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="MinHeight" Value="26"/>
		<Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ReadOnly">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle" />
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused">
									<Storyboard/>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<mscor:Boolean>True</mscor:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="Base" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="1" Fill="{StaticResource ControlBackgroundBrush}" />
						<Rectangle x:Name="FocusRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
						<Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
						<Grid Margin="0,1,0,0">
							<Border x:Name="ReadOnlyVisualElement" Background="{StaticResource ReadOnlyBrush}" Opacity="0"/>
							<Grid >
								<ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Margin="4,0,2,2" VerticalAlignment="Center" Background="{x:Null}"/>
							</Grid>
						</Grid>
						<Rectangle x:Name="DisabledVisualElement" Stroke="{StaticResource ControlsDisabledBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0"/>
						<Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" Visibility="Collapsed">
							<ToolTipService.ToolTip>
								<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<mscor:Boolean>true</mscor:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
								<Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
								<Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- Data grid styles -->
	
	<!--DataGridCell Style-->
	<Style TargetType="data:DataGridCell" x:Key="DefaultDataGridCellStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="data:DataGridCell">
					<Grid x:Name="Root" Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CurrentStates">
								<VisualState x:Name="Regular"/>
								<VisualState x:Name="Current">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual" From="0.3"/>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedRectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="Invalid">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InvalidVisualElement"/>
										<ColorAnimation Duration="0" To="{StaticResource WhiteColor}" Storyboard.TargetProperty="(Fill).Color" Storyboard.TargetName="FocusVisual"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedRectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="FocusVisual" HorizontalAlignment="Stretch" IsHitTestVisible="false" Opacity="0" StrokeThickness="1" VerticalAlignment="Stretch">
							<Rectangle.Stroke>
								<SolidColorBrush Color="{StaticResource Gray2}"/>
							</Rectangle.Stroke>
						</Rectangle>
						<Rectangle x:Name="SelectedRectangle" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource NormalBrush}"/>
						<Rectangle x:Name="MouseOverRectangle" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource ItemSelectedBrush}"/>
						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<Rectangle x:Name="InvalidVisualElement" HorizontalAlignment="Stretch" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ControlsValidationBrush}" StrokeThickness="1" VerticalAlignment="Stretch"/>
						<Rectangle x:Name="RightGridLine" Grid.Column="1" VerticalAlignment="Stretch" Width="1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--DataGridColumnHeader Style-->
	<Style TargetType="dataPrimitives:DataGridColumnHeader" x:Key="DefaultDataGridColumnHeaderStyle">
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlTitleBigFontSize}"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="SeparatorBrush" Value="{StaticResource SeperatorBrush}"/>
		<Setter Property="Padding" Value="4,5,4,5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dataPrimitives:DataGridColumnHeader">
					<Border BorderBrush="Black" BorderThickness="0,1">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverLeftRightSeperator">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedRectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedLeftRightSeperator">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SortStates">
								<VisualState x:Name="Unsorted"/>
								<VisualState x:Name="SortAscending">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SortDescending">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
										<DoubleAnimation Duration="0" To="-.9" Storyboard.TargetProperty="(RenderTransform).ScaleY" Storyboard.TargetName="SortIcon"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="Root" Height="44">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Stretch="Fill" Fill="{StaticResource WhiteBrush}"/>

							<Rectangle x:Name="MouseOverRectangle" Grid.ColumnSpan="2" Opacity="0">
								<Rectangle.Fill>
									<SolidColorBrush Color="{StaticResource Gray8}"/>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle x:Name="PressedRectangle" Grid.ColumnSpan="2" Opacity="0">
								<Rectangle.Fill>
									<SolidColorBrush Color="{StaticResource Gray8}"/>
								</Rectangle.Fill>
							</Rectangle>
							<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<ContentPresenter Content="{TemplateBinding Content}"/>
								<Path x:Name="SortIcon" Grid.Column="1" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z " Fill="{StaticResource GrayBrush3}" HorizontalAlignment="Left" Margin="4,0,0,0" Opacity="0" RenderTransformOrigin=".5,.5" Stretch="Uniform" VerticalAlignment="Center" Width="8">
									<Path.RenderTransform>
										<ScaleTransform ScaleY=".9" ScaleX=".9"/>
									</Path.RenderTransform>
								</Path>
							</Grid>
							<Rectangle x:Name="VerticalSeparator" Grid.Column="1" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" VerticalAlignment="Stretch" Width="1" Opacity="0"/>
							<Border x:Name="MouseOverLeftRightSeperator" Grid.ColumnSpan="2" BorderThickness="1,0" BorderBrush="{StaticResource SeperatorBrush}" Margin="-1,0,0,0" Opacity="0"/>
							<Border x:Name="PressedLeftRightSeperator" Grid.ColumnSpan="2" Opacity="0" BorderBrush="{StaticResource SeperatorBrush}" BorderThickness="1,0" Margin="-1,0,0,0"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--DataGridRowHeader Style-->
	<Style TargetType="dataPrimitives:DataGridRowHeader" x:Key="DefaultDataGridRowHeaderStyle">
		<Setter Property="Background" Value="{StaticResource TransparentLightLightBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="SeparatorBrush" Value="{StaticResource WhiteBrush}"/>
		<Setter Property="SeparatorVisibility" Value="Collapsed"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dataPrimitives:DataGridRowHeader">
					<Grid x:Name="Root">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.695"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CurrentRowGlyph"/>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="EditingRowGlyph"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOverCurrentRowSelected">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.695"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CurrentRowGlyph"/>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="EditingRowGlyph"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NormalCurrentRow">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CurrentRowGlyph"/>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="EditingRowGlyph"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NormalSelected">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedRectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CurrentRowGlyph"/>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="EditingRowGlyph"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NormalEditingRow">
									<Storyboard>

										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CurrentRowGlyph"/>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="EditingRowGlyph"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="RowValid"/>
								<VisualState x:Name="RowInvalid">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundRectangle"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RowInvalidVisualElement"/>
										<ColorAnimation Duration="0" To="{StaticResource ValidationColor5}" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" Storyboard.TargetName="CurrentRowGlyph"/>
										<ColorAnimation Duration="0" To="{StaticResource ValidationColor5}" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="CurrentRowGlyph"/>
										<ColorAnimation Duration="0" To="{StaticResource ValidationColor5}" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" Storyboard.TargetName="EditingRowGlyph"/>
										<ColorAnimation Duration="0" To="{StaticResource ValidationColor5}" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" Storyboard.TargetName="EditingRowGlyph"/>
										<ColorAnimation Duration="0" To="{StaticResource ValidationColor5}" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" Storyboard.TargetName="EditingRowGlyph"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{StaticResource WhiteBrush}" BorderThickness="1,0,1,0" Grid.ColumnSpan="2" Grid.RowSpan="3">
							<Grid>
								<Rectangle x:Name="RowInvalidVisualElement" Grid.ColumnSpan="2" Fill="{StaticResource ValidationSummaryFillBrush2}" Opacity="0" Grid.RowSpan="3" Stretch="Fill"/>
								<Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource ItemSelectedBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Grid.Column="0"/>
								<Rectangle x:Name="MouseOverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource ItemSelectedBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Grid.Column="0"/>
							</Grid>
						</Border>
						<Rectangle x:Name="HorizontalSeparator" Grid.ColumnSpan="2" Fill="{TemplateBinding SeparatorBrush}" HorizontalAlignment="Stretch" Height="1" Margin="1,0,1,0" Grid.Row="2" Visibility="{TemplateBinding SeparatorVisibility}"/>
						<ContentPresenter Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="Center" Grid.RowSpan="2" VerticalAlignment="Center"/>
						<Path x:Name="CurrentRowGlyph" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " HorizontalAlignment="Center" Height="10" Margin="8,0,8,0" Opacity="0" Grid.RowSpan="2" Stretch="Fill" VerticalAlignment="Center" Width="6">
							<Path.Fill>
								<LinearGradientBrush EndPoint="0,1.75" StartPoint="0,-0.150000005960464">
									<LinearGradientBrush.RelativeTransform>
										<MatrixTransform/>
									</LinearGradientBrush.RelativeTransform>
									<GradientStop Color="{StaticResource HighlightDarkColor}" Offset="0"/>
									<GradientStop Color="{StaticResource HighlightLightColor}" Offset="1"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path x:Name="EditingRowGlyph" Fill="{StaticResource HighlightLightBrush}" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " HorizontalAlignment="Center" Height="10" Margin="8,0,8,0" Opacity="0" Grid.RowSpan="2" Stretch="Fill" VerticalAlignment="Center" Width="6"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--DataGridRow Style-->
	<Style TargetType="data:DataGridRow" x:Key="DefaultDataGridRowStyle">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="data:DataGridRow">
					<dataPrimitives:DataGridFrozenGrid x:Name="Root">
						<dataPrimitives:DataGridFrozenGrid.Resources>
							<Storyboard x:Key="DetailsVisibleTransition">
								<DoubleAnimation Duration="00:00:0.1" Storyboard.TargetProperty="ContentHeight" Storyboard.TargetName="DetailsPresenter"/>
							</Storyboard>
						</dataPrimitives:DataGridFrozenGrid.Resources>
						<dataPrimitives:DataGridFrozenGrid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</dataPrimitives:DataGridFrozenGrid.ColumnDefinitions>
						<dataPrimitives:DataGridFrozenGrid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</dataPrimitives:DataGridFrozenGrid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="NormalAlternatingRow">
									<Storyboard/>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.695"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NormalSelected">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedRectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOverSelected">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.695"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UnfocusedSelected">
									<Storyboard/>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="Invalid">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InvalidVisualElement"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource ItemSelectedBrush}" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
						<Rectangle x:Name="MouseOverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource ItemSelectedBrush}" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
						<dataPrimitives:DataGridRowHeader x:Name="RowHeader" dataPrimitives:DataGridFrozenGrid.IsFrozen="True" Grid.RowSpan="3"/>
						<dataPrimitives:DataGridCellsPresenter x:Name="CellsPresenter" Grid.Column="1" dataPrimitives:DataGridFrozenGrid.IsFrozen="True"/>
						<dataPrimitives:DataGridDetailsPresenter x:Name="DetailsPresenter" Grid.Column="1" Grid.Row="1"/>
						<Rectangle x:Name="BottomGridLine" Grid.Column="1" HorizontalAlignment="Stretch" Height="1" Grid.Row="2"/>
					</dataPrimitives:DataGridFrozenGrid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--DataGrid Style-->
	<Style TargetType="data:DataGrid" x:Key="DefaultDataGridStyle">
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
		<Setter Property="MinHeight" Value="200"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
		<Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ThumbBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="RowBackground" Value="Transparent"/>
		<Setter Property="AlternatingRowBackground" Value="Transparent"/>
		<Setter Property="HeadersVisibility" Value="Column"/>
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="SelectionMode" Value="Extended"/>
		<Setter Property="CanUserReorderColumns" Value="True"/>
		<Setter Property="CanUserResizeColumns" Value="True"/>
		<Setter Property="CanUserSortColumns" Value="True"/>
		<Setter Property="AutoGenerateColumns" Value="True"/>
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
		<Setter Property="DragIndicatorStyle">
			<Setter.Value>
				<Style TargetType="ContentControl">
					<Setter Property="Foreground" Value="{StaticResource TransparentLightLightBrush}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ContentControl">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="SortStates">
											<VisualState x:Name="Unsorted"/>
											<VisualState x:Name="SortAscending">
												<Storyboard>
													<DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="SortDescending">
												<Storyboard>
													<DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
													<DoubleAnimation Duration="0" To="-.9" Storyboard.TargetProperty="(RenderTransform).ScaleY" Storyboard.TargetName="SortIcon"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Fill="{StaticResource TransparentDarkDarkDarkBrush}" Stretch="Fill"/>
									<Rectangle x:Name="BackgroundGradient" Grid.ColumnSpan="2"  Fill="{StaticResource ControlBackgroundBrush}" Opacity="0" Stretch="Fill"/>
									<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<ContentPresenter Content="{TemplateBinding Content}"/>
										<Path x:Name="SortIcon" Grid.Column="1" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z " Fill="{StaticResource GrayBrush10}" HorizontalAlignment="Left" Margin="4,0,0,0" Opacity="0" RenderTransformOrigin=".5,.5" Stretch="Uniform" VerticalAlignment="Center" Width="8">
											<Path.RenderTransform>
												<ScaleTransform ScaleY=".9" ScaleX=".9"/>
											</Path.RenderTransform>
										</Path>
									</Grid>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="DropLocationIndicatorStyle">
			<Setter.Value>
				<Style TargetType="ContentControl">
					<Setter Property="Background" Value="{StaticResource GrayBrush3}"/>
					<Setter Property="Width" Value="2"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ContentControl">
								<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="GridLinesVisibility" Value="None"/>
		<Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GrayBrush2}"/>
		<Setter Property="IsTabStop" Value="True"/>
		<Setter Property="VerticalGridLinesBrush" Value="{StaticResource GrayBrush2}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="data:DataGrid">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<Grid x:Name="Root" Background="{TemplateBinding Background}">
								<Grid.Resources>
									<ControlTemplate x:Key="TopLeftHeaderTemplate" TargetType="dataPrimitives:DataGridColumnHeader">
										<Grid x:Name="Root">
											<Grid.RowDefinitions>
												<RowDefinition/>
												<RowDefinition/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Border BorderBrush="{StaticResource SeperatorBrush}" Background="{StaticResource WhiteBrush}" Grid.RowSpan="2"/>
											<Rectangle Fill="{StaticResource GrayBrush4}" Height="1" Grid.RowSpan="2" StrokeThickness="1" VerticalAlignment="Bottom" Width="Auto" Visibility="Collapsed"/>
										</Grid>
									</ControlTemplate>
									<ControlTemplate x:Key="TopRightHeaderTemplate" TargetType="dataPrimitives:DataGridColumnHeader">
										<Grid x:Name="RootElement">
											<Grid.RowDefinitions>
												<RowDefinition/>
												<RowDefinition/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Border Background="{StaticResource WhiteBrush}" Grid.RowSpan="2"/>
										</Grid>
									</ControlTemplate>
								</Grid.Resources>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<dataPrimitives:DataGridColumnHeader x:Name="TopLeftCornerHeader" Template="{StaticResource TopLeftHeaderTemplate}" Width="22"/>
								<dataPrimitives:DataGridColumnHeadersPresenter x:Name="ColumnHeadersPresenter" Grid.Column="1"/>
								<dataPrimitives:DataGridColumnHeader x:Name="TopRightCornerHeader" Grid.Column="2" Template="{StaticResource TopRightHeaderTemplate}"/>
								<Rectangle x:Name="ColumnHeadersAndRowsSeparator" Grid.ColumnSpan="3" Fill="{StaticResource GrayBrush2}" Height="1" StrokeThickness="1" VerticalAlignment="Bottom" Width="Auto" Visibility="Collapsed"/>
								<dataPrimitives:DataGridRowsPresenter x:Name="RowsPresenter" Grid.ColumnSpan="2" Grid.Row="1"/>
								<Rectangle x:Name="BottomRightCorner" Grid.Column="2" Fill="{TemplateBinding Background}" Grid.Row="2"/>
								<Rectangle x:Name="BottomLeftCorner" Grid.ColumnSpan="2" Fill="{TemplateBinding Background}" Grid.Row="2"/>
								<ScrollBar x:Name="VerticalScrollbar" Grid.Column="2" Margin="0,-1,-3,-1" Orientation="Vertical" Grid.Row="1" Width="18" />
								<Grid Grid.Column="1" Grid.Row="2">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Rectangle x:Name="FrozenColumnScrollBarSpacer"/>
									<ScrollBar x:Name="HorizontalScrollbar" Grid.Column="1" Height="18" Margin="-1,0,-1,-3" Orientation="Horizontal" />
								</Grid>
								<dataInput:ValidationSummary x:Name="ValidationSummary" Grid.ColumnSpan="3" Filter="ObjectErrors" MaxHeight="90" Grid.Row="3"/>
							</Grid>
						</Border>
						<Border x:Name="DisabledVisualElement" Background="{StaticResource TransparentLightLightBrush}" CornerRadius="2" HorizontalAlignment="Stretch" Height="Auto" IsHitTestVisible="False" Opacity="0" VerticalAlignment="Stretch" Width="Auto"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--DataPagerPageButton Style-->
	<Style x:Key="ImageButton" TargetType="Button">
		<Setter Property="Background" Value="{StaticResource GrayBrush3}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="Normal" GeneratedDuration="0:0:0.3" To="MouseOver"/>
									<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.2"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.2"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard/>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<Ellipse x:Name="ellipse" Stroke="{StaticResource CheckBoxMouseOverBrush}" Opacity="0.3" Fill="Transparent"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--DataPager Style-->
	<Style TargetType="data:DataPager" x:Key="DefaultDataPagerStyle">
		<Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Right"/>
		<Setter Property="NumericButtonStyle">
			<Setter.Value>
				<Style TargetType="ToggleButton">
					<Setter Property="MinHeight" Value="20"/>
					<Setter Property="MinWidth" Value="20"/>
					<Setter Property="HorizontalAlignment" Value="Right"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
					<Setter Property="Background" Value="{StaticResource TransparentWhiteBrush}"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="Padding" Value="1"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ToggleButton">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<ColorAnimation Duration="0" To="{StaticResource WhiteColor}" Storyboard.TargetProperty="(BorderBrush).Color" Storyboard.TargetName="OuterBtnBorder"/>
													<ColorAnimation Duration="0" To="{StaticResource Gray1}" Storyboard.TargetProperty="(BorderBrush).Color" Storyboard.TargetName="InnerBtnBorder"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<ColorAnimation Duration="0" To="{StaticResource WhiteColor}" Storyboard.TargetProperty="(BorderBrush).Color" Storyboard.TargetName="OuterBtnBorder"/>
													<ColorAnimation Duration="0" To="{StaticResource Gray1}" Storyboard.TargetProperty="(BorderBrush).Color" Storyboard.TargetName="InnerBtnBorder"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="CheckStates">
											<VisualState x:Name="Checked">
												<Storyboard>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedStateOuterBorder"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Unchecked"/>
										</VisualStateGroup>
										<VisualStateGroup x:Name="FocusStates">
											<VisualState x:Name="Focused">
												<Storyboard>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Unfocused"/>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Border x:Name="CheckedStateOuterBorder" BorderBrush="{StaticResource GrayBrush2}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource GrayBrush8}" CornerRadius="1" Opacity="0"/>
									<Border x:Name="OuterBtnBorder" BorderBrush="{StaticResource TransparentWhiteBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1">
										<Border x:Name="InnerBtnBorder" BorderBrush="{StaticResource TransparentWhiteBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Margin="0">
											<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2"/>
										</Border>
									</Border>
									<Border x:Name="FocusVisualElement" BorderBrush="{StaticResource HighlightBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Margin="1" Opacity="0"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="data:DataPager">
					<Grid x:Name="Root" Background="Transparent">
						<Grid.Resources>
							<SolidColorBrush x:Key="BackgroundColor" Color="{StaticResource TransparentBlackColor}"/>
							<SolidColorBrush x:Key="ForegroundColor" Color="{StaticResource BlackColor}"/>
							<SolidColorBrush x:Key="BorderBrushColor" Color="{StaticResource WhiteColor}"/>
							<ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<ColorAnimation Duration="0" To="{StaticResource Gray4}" Storyboard.TargetProperty="(BorderBrush).Color" Storyboard.TargetName="InnerBtnBorder"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<ColorAnimation Duration="0" To="{StaticResource WhiteColor}" Storyboard.TargetProperty="(BorderBrush).Color" Storyboard.TargetName="OuterBtnBorder"/>
													<ColorAnimation Duration="0" To="{StaticResource TransparentWhiteColor}" Storyboard.TargetProperty="(BorderBrush).Color" Storyboard.TargetName="InnerBtnBorder"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="FocusStates">
											<VisualState x:Name="Focused">
												<Storyboard>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Unfocused"/>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Border x:Name="OuterBtnBorder" BorderBrush="{StaticResource TransparentWhiteBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1">
										<Border x:Name="InnerBtnBorder" BorderBrush="{StaticResource TransparentWhiteBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
											<ContentPresenter x:Name="path" Content="{TemplateBinding Content}"/>
										</Border>
									</Border>
									<Border x:Name="FocusVisualElement" BorderBrush="{StaticResource HighlightBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" Margin="1" Opacity="0"/>
								</Grid>
							</ControlTemplate>
							<Style x:Key="PagingTextBoxStyle" TargetType="TextBox">
								<Setter Property="BorderThickness" Value="1"/>
								<Setter Property="Background" Value="{StaticResource WhiteColorBrush}"/>
								<Setter Property="Foreground" Value="{StaticResource BlackColorBrush}"/>
								<Setter Property="Padding" Value="2, 2, 2, -1"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="TextBox">
											<Grid x:Name="RootElement">
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Normal"/>
														<VisualState x:Name="MouseOver">
															<Storyboard/>
														</VisualState>
														<VisualState x:Name="Disabled">
															<Storyboard>
																<DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="ReadOnly">
															<Storyboard>
																<DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
															</Storyboard>
														</VisualState>
													</VisualStateGroup>
													<VisualStateGroup x:Name="FocusStates">
														<VisualState x:Name="Focused">
															<Storyboard>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
																	<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
																	<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
																</DoubleAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Unfocused"/>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<Rectangle x:Name="Base" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{TemplateBinding Background}" Opacity="1" />
												<Rectangle x:Name="FocusRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
												<Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
												<Grid>
													<Border x:Name="ReadOnlyVisualElement" Background="{StaticResource TransparentLightLightBrush}" Opacity="0"/>
													<Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
														<ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Margin="0,0,0,2" Padding="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
													</Border>
												</Grid>

												<Border x:Name="DisabledVisualElement" BorderBrush="{StaticResource GrayBrush12}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource GrayBrush12}" IsHitTestVisible="False" Opacity="0"/>
												<Border x:Name="FocusVisualElement" BorderBrush="{StaticResource HighlightBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CurrentPagePrefixTextBlock"/>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CurrentPageSuffixTextBlock"/>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledBorder">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.58"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MoveStates">
								<VisualState x:Name="MoveEnabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="CurrentPageTextBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MoveDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="CurrentPageTextBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MoveFirstStates">
								<VisualState x:Name="MoveFirstEnabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="FirstPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MoveFirstDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="FirstPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MovePreviousStates">
								<VisualState x:Name="MovePreviousEnabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PreviousPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MovePreviousDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PreviousPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MoveNextStates">
								<VisualState x:Name="MoveNextEnabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="NextPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MoveNextDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="NextPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MoveLastStates">
								<VisualState x:Name="MoveLastEnabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="LastPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MoveLastDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="LastPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisplayModeStates">
								<VisualState x:Name="FirstLastNumeric">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NextPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PreviousPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CurrentPageTextBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PageDisplay">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="FirstLastPreviousNext">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NumericButtonPanel">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="FirstLastPreviousNextNumeric">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CurrentPageTextBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PageDisplay">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Numeric">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FirstPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LastPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NextPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PreviousPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CurrentPageTextBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PageDisplay">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Separator1">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Separator2">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PreviousNext">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FirstPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LastPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NumericButtonPanel">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PreviousNextNumeric">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FirstPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LastPageButton">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CurrentPageTextBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PageDisplay">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" MinHeight="24" Padding="{TemplateBinding Padding}" VerticalAlignment="Bottom">
							<StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Orientation="Horizontal" VerticalAlignment="Stretch" Margin="5">
								<Button x:Name="FirstPageButton" BorderBrush="{StaticResource TextBoxBorderBrush}" BorderThickness="1" Foreground="{StaticResource ForegroundColor}" HorizontalAlignment="Right" Height="25" Padding="1" VerticalAlignment="Center" Width="25" Margin="0,0,2,0" Style="{StaticResource ImageButton}">
									<Grid Height="9" Width="8" Opacity="0.7">
										<Path Data="M0,1 L1,0 L1,2 Z" Fill="{StaticResource CheckBoxMouseOverBrush}" HorizontalAlignment="Right" Height="9" Stretch="Fill" Width="5"/>
										<Rectangle Fill="{StaticResource CheckBoxMouseOverBrush}" HorizontalAlignment="Left" Width="2"/>
									</Grid>
								</Button>
								<Button Style="{StaticResource ImageButton}" x:Name="PreviousPageButton" BorderBrush="{StaticResource TextBoxBorderBrush}" BorderThickness="1" Background="{StaticResource NormalBrush}" Foreground="{StaticResource ForegroundColor}" HorizontalAlignment="Right" Height="25" Padding="1" VerticalAlignment="Center" Width="25" Margin="0,0,2,0">
									<Path Data="M0,1 L1,0 L1,2 Z" Fill="{StaticResource CheckBoxMouseOverBrush}" HorizontalAlignment="Center" Height="9" Stretch="Fill" Width="5" Opacity="0.7"/>
								</Button>
								<Border x:Name="Separator1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,0" Background="{StaticResource GrayBrush4}" Margin="0,3,0,3" Width="1" Visibility="Collapsed"/>
								<StackPanel x:Name="NumericButtonPanel" Margin="1" Orientation="Horizontal"/>
								<StackPanel x:Name="PageDisplay" Orientation="Horizontal">
									<TextBlock x:Name="CurrentPagePrefixTextBlock" Foreground="{TemplateBinding Foreground}" Margin="4,0,0,0" VerticalAlignment="Center" Width="Auto" Text="PAGE"/>
									<TextBox x:Name="CurrentPageTextBox" Foreground="{StaticResource HighlightBrush}" Height="Auto" Margin="4,0" Style="{StaticResource PagingTextBoxStyle}" TextWrapping="Wrap" Width="40" FontSize="16" HorizontalAlignment="Center" BorderBrush="{StaticResource TextBoxBorderBrush}" FontWeight="Bold"/>
									<TextBlock x:Name="CurrentPageSuffixTextBlock" Foreground="{TemplateBinding Foreground}" Margin="0,0,4,0" VerticalAlignment="Center" Width="Auto"/>
								</StackPanel>
								<Border x:Name="Separator2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,0" Background="{StaticResource GrayBrush4}" Margin="0,3,0,3" Width="1" Visibility="Collapsed"/>
								<Button Style="{StaticResource ImageButton}" x:Name="NextPageButton" BorderBrush="{StaticResource TextBoxBorderBrush}" BorderThickness="1" Background="{StaticResource NormalBrush}" Foreground="{StaticResource ForegroundColor}" HorizontalAlignment="Right" Height="25" Padding="1" VerticalAlignment="Center" Width="25" Margin="2,0,0,0">
									<Path Data="M0,0 L1,1 L0,2 Z" Fill="{StaticResource CheckBoxMouseOverBrush}" HorizontalAlignment="Center" Height="9" Stretch="Fill" Width="5" Opacity="0.7"/>
								</Button>
								<Button Style="{StaticResource ImageButton}" x:Name="LastPageButton" BorderBrush="{StaticResource TextBoxBorderBrush}" BorderThickness="1" Background="{StaticResource NormalBrush}" Foreground="{StaticResource ForegroundColor}" HorizontalAlignment="Right" Height="25" Padding="1" VerticalAlignment="Center" Width="25" Margin="2,0,0,0">
									<Grid Height="9" Width="8" Opacity="0.7">
										<Path Data="M0,0 L1,1 L0,2 Z" Fill="{StaticResource CheckBoxMouseOverBrush}" HorizontalAlignment="Left" Height="9" Stretch="Fill" Width="5"/>
										<Rectangle Fill="{StaticResource CheckBoxMouseOverBrush}" HorizontalAlignment="Right" Width="2"/>
									</Grid>
								</Button>
							</StackPanel>
						</Border>
						<Border x:Name="DisabledBorder" BorderThickness="1" Background="{StaticResource WhiteBrush}" Opacity="0" IsHitTestVisible="False"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>



	<!-- Error Window Style -->
	<Style x:Key="ErrorWindowStyle" TargetType="controls:ChildWindow">
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="TabNavigation" Value="Cycle"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="OverlayBrush" Value="#7F000000"/>
		<Setter Property="OverlayOpacity" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:ChildWindow">
					<Grid x:Name="Root">
						<Grid.Resources>
							<Style x:Key="ButtonStyle" TargetType="Button">
								<Setter Property="Background" Value="#FF1F3B53"/>
								<Setter Property="Foreground" Value="#FF000000"/>
								<Setter Property="Padding" Value="3"/>
								<Setter Property="BorderThickness" Value="1"/>
								<Setter Property="BorderBrush">
									<Setter.Value>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FFA3AEB9" Offset="0"/>
											<GradientStop Color="#FF8399A9" Offset="0.375"/>
											<GradientStop Color="#FF718597" Offset="0.375"/>
											<GradientStop Color="#FF617584" Offset="1"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="Button">
											<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="14" Background="#02FFFFFF" x:Name="grid">
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Normal"/>
														<VisualState x:Name="MouseOver">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz2" Storyboard.TargetProperty="Visibility">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
																</ObjectAnimationUsingKeyFrames>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz1" Storyboard.TargetProperty="Visibility">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
																</ObjectAnimationUsingKeyFrames>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz0" Storyboard.TargetProperty="Visibility">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
																</ObjectAnimationUsingKeyFrames>
																<DoubleAnimation Duration="0" Storyboard.TargetName="X" Storyboard.TargetProperty="Opacity" To="0.95"/>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Pressed">
															<Storyboard>
																<DoubleAnimation Duration="0" Storyboard.TargetName="X" Storyboard.TargetProperty="Opacity" To="0.85"/>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz2" Storyboard.TargetProperty="Visibility">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
																</ObjectAnimationUsingKeyFrames>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz1" Storyboard.TargetProperty="Visibility">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
																</ObjectAnimationUsingKeyFrames>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz0" Storyboard.TargetProperty="Visibility">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Disabled">
															<Storyboard>
																<DoubleAnimation Duration="0" Storyboard.TargetName="X" Storyboard.TargetProperty="Opacity" To="0.5"/>
															</Storyboard>
														</VisualState>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<Path HorizontalAlignment="Center" Margin="0,-1,0,0" Width="9" Fill="#14C51900" Stretch="Fill" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z" x:Name="X_Fuzz2" Stroke="#14C51900" Height="8" VerticalAlignment="Center" Opacity="1" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
													<Path.RenderTransform>
														<TransformGroup>
															<ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
														</TransformGroup>
													</Path.RenderTransform>
												</Path>
												<Path HorizontalAlignment="Center" Margin="0,-1,0,0" Width="9" Fill="#1EC51900" Stretch="Fill" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z" x:Name="X_Fuzz1" Stroke="#1EC51900" Height="8" VerticalAlignment="Center" Opacity="1" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
													<Path.RenderTransform>
														<TransformGroup>
															<ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
														</TransformGroup>
													</Path.RenderTransform>
												</Path>
												<Path HorizontalAlignment="Center" Margin="0,-1,0,0" Width="9" Fill="#FFC51900" Stretch="Fill" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z" x:Name="X_Fuzz0" Stroke="#FFC51900" Height="8" VerticalAlignment="Center" Opacity="1" Visibility="Collapsed"/>
												<Path HorizontalAlignment="Center" Margin="0,-1,0,0" Width="9" Fill="#FFFFFFFF" Stretch="Fill" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z" x:Name="X" Height="8" VerticalAlignment="Center" Opacity="0.7">
													<Path.Stroke>
														<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
															<GradientStop Color="#FF313131" Offset="1"/>
															<GradientStop Color="#FF8E9092" Offset="0"/>
														</LinearGradientBrush>
													</Path.Stroke>
												</Path>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="WindowStates">
								<VisualState x:Name="Open">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="Opacity">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
											<SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
											<SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Closed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="Opacity">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="Overlay" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0" Background="{TemplateBinding OverlayBrush}" Opacity="{TemplateBinding OverlayOpacity}"/>
						<Grid x:Name="ContentRoot" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" RenderTransformOrigin="0.5,0.5" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
							<Grid.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
								</TransformGroup>
							</Grid.RenderTransform>
							<Border BorderThickness="1" CornerRadius="2" BorderBrush="#14000000" Background="#14000000" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="-1"/>
							<Border BorderThickness="1" CornerRadius="2.25" BorderBrush="#0F000000" Background="#0F000000" HorizontalAlignment="Stretch" Margin="-2" VerticalAlignment="Stretch"/>
							<Border BorderThickness="1" CornerRadius="2.5" BorderBrush="#0C000000" Background="#0C000000" HorizontalAlignment="Stretch" Margin="-3" VerticalAlignment="Stretch"/>
							<Border BorderThickness="1" CornerRadius="2.75" BorderBrush="#0A000000" Background="#0A000000" HorizontalAlignment="Stretch" Margin="-4" VerticalAlignment="Stretch"/>
							<Border Background="#FFFFFFFF" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
								<Border CornerRadius="1.5" Margin="1">
									<Border.Background>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FFE5E8EB" Offset="1"/>
											<GradientStop Color="#FFF6F8F9" Offset="0"/>
										</LinearGradientBrush>
									</Border.Background>
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition/>
										</Grid.RowDefinitions>
										<Border x:Name="Chrome" Width="Auto" BorderBrush="#FFFFFFFF" BorderThickness="0,0,0,1">
											<Border.Background>
												<LinearGradientBrush EndPoint="0.5,0.528" StartPoint="0.5,0">
													<GradientStop Color="#FFE5E8EB" Offset="1"/>
													<GradientStop Color="#FFFEFEFE" Offset="0"/>
												</LinearGradientBrush>
											</Border.Background>
											<Grid Height="Auto" Width="Auto">
												<Grid.ColumnDefinitions>
													<ColumnDefinition/>
													<ColumnDefinition Width="30"/>
												</Grid.ColumnDefinitions>
												<ContentControl x:Name="contentControl" Content="{TemplateBinding Title}" 
													IsTabStop="False" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="8,4,6,4"/>
												<Button x:Name="CloseButton" Grid.Column="1" IsTabStop="False" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="14" Style="{StaticResource ButtonStyle}"/>
											</Grid>
										</Border>
										<Border x:Name="border" Background="{TemplateBinding Background}" Margin="7" Grid.Row="1">
											<ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" 
												ContentTemplate="{TemplateBinding ContentTemplate}"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Border>
									</Grid>
								</Border>
							</Border>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
