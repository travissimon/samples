//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Glossary.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GlossaryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GlossaryEntities object using the connection string found in the 'GlossaryEntities' section of the application configuration file.
        /// </summary>
        public GlossaryEntities() : base("name=GlossaryEntities", "GlossaryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GlossaryEntities object.
        /// </summary>
        public GlossaryEntities(string connectionString) : base(connectionString, "GlossaryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GlossaryEntities object.
        /// </summary>
        public GlossaryEntities(EntityConnection connection) : base(connection, "GlossaryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlossaryEntry> GlossaryEntries
        {
            get
            {
                if ((_GlossaryEntries == null))
                {
                    _GlossaryEntries = base.CreateObjectSet<GlossaryEntry>("GlossaryEntries");
                }
                return _GlossaryEntries;
            }
        }
        private ObjectSet<GlossaryEntry> _GlossaryEntries;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlossaryEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlossaryEntries(GlossaryEntry glossaryEntry)
        {
            base.AddObject("GlossaryEntries", glossaryEntry);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GlossaryModel", Name="GlossaryEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlossaryEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlossaryEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="term">Initial value of the Term property.</param>
        public static GlossaryEntry CreateGlossaryEntry(global::System.Int32 id, global::System.String term)
        {
            GlossaryEntry glossaryEntry = new GlossaryEntry();
            glossaryEntry.Id = id;
            glossaryEntry.Term = term;
            return glossaryEntry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Term
        {
            get
            {
                return _Term;
            }
            set
            {
                OnTermChanging(value);
                ReportPropertyChanging("Term");
                _Term = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Term");
                OnTermChanged();
            }
        }
        private global::System.String _Term;
        partial void OnTermChanging(global::System.String value);
        partial void OnTermChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();

        #endregion
    
    }

    #endregion
    
}
